@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

 <script>
     function UserForm($resource) {

         this.exampleResource = $resource('http://localhost/AngularExample/Example/:entityId', { entityId: '@@Id' });
         this.allRecords = [];
         this.clearForm();
         this.loadAll();
     }

     UserForm.prototype = {

         loadAll: function () {
             this.allRecords = this.exampleResource.query();
         },

         loadOne: function (id) {
             var self = this;
             this.form = this.exampleResource.get({ entityId: id }, function () {
                 self.master = angular.copy(self.form);
             });
         },

         save: function () {
             var self = this;
             self.master = self.form;

             self.form.$save(function (returnedInfo, responseHeaders) {
                 //figure out if we have to add to our list or update an existing list item
                 var i = self.arrayIndexOf(self.allRecords, function (obj) {
                     return obj.Id === returnedInfo.Id;
                 })
                 i > -1 ? self.allRecords[i] = returnedInfo : self.allRecords.push(returnedInfo);
                 self.cancel(); // needed so we can do change tracking
             });
         },

         cancel: function () {
             this.form = angular.copy(this.master);
         },

         deleteOne: function (index) {
             var toDelete = this.allRecords[index];
             toDelete.$delete();
             this.allRecords.splice(index, 1);
         },

         isCancelDisabled: function () {
             return angular.equals(this.master, this.form);
         },

         isSaveDisabled: function () {
             return this.myForm.$invalid || angular.equals(this.master, this.form);
         },

         clearForm: function () {
             this.form = new this.exampleResource();
         },

         // general helper, should go elsewhere
         arrayIndexOf: function (a, fnc) {
             if (!fnc || typeof (fnc) != 'function') {
                 return -1;
             }
             if (!a || !a.length || a.length < 1) return -1;
             for (var i = 0; i < a.length; i++) {
                 if (fnc(a[i])) return i;
             }
             return -1;
         }
     };
 </script>
 
 
 <div ng:controller="UserForm">
   
    <ul>
        <li ng:cloak ng:repeat="record in allRecords">
            <span ng:click="deleteOne($index)">[x]</span><span ng:click="loadOne(record.Id)">{{record.FirstName}} {{record.LastName}}</span>
        </li>    
    </ul>
    <hr/>
    <form name="myForm">
        <input type="hidden" ng:model="form.Id" /> 
        <label>Name:</label><br/>
        <input type="text" ng:model="form.FirstName" required/> 
        <input type="text" ng:model="form.LastName" required/> 
        <br/><br/>
   
        <button ng:click="cancel()" ng:disabled="{{isCancelDisabled()}}">Cancel</button>
        <button ng:click="save()" ng:disabled="{{isSaveDisabled()}}">Save</button>
        <button ng:click="clearForm()" >Clear Form (so you can Add)</button>
    </form>
   
    <hr/>
    Debug View:
    <pre>
        form={{form}}
        master={{master}}  
        myForm={{myForm}}
    </pre>
</div>